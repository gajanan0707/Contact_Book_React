{"version":3,"sources":["components/elements/Navbar.js","components/contacts/Contact.js","actions/contactAction.js","constant/types.js","components/contacts/Contacts.js","reducers/contactReducer.js","reducers/index.js","store.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Contact","contact","selectAll","dispatch","useDispatch","name","phone","email","id","checked","type","size","round","onClick","payload","deleteContact","Contacts","useState","setSelectAll","contacts","useSelector","state","selctedContcats","selectedContacts","useEffect","map","length","value","htmlFor","key","intialState","username","address","street","suite","city","zipcode","geo","lat","lng","website","company","catchPhrase","bs","combineReducers","action","arr","filter","values","val","store","createStore","rootReducer","composeWithDevTools","AddContact","history","useHistory","setName","setEmail","setPhone","onSubmit","e","preventDefault","new_contact","shortid","generate","push","craeteContact","placeholder","onChange","target","EditContact","useParams","getContact","update_contact","Object","assign","updateContact","onUpdateContact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4a5f3e2f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar shadow fixed-top navbar-expand-sm navbar-dark bg-primary\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Contact Book\n        </Link>\n        <div>\n          <Link to=\"/contacts/add\" className=\"btn btn-light ml-auto\">\n            Create Contact\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Link } from \"react-router-dom\";\nimport { deleteContact } from \"../../actions/contactAction\";\nimport { useDispatch } from \"react-redux\";\n\nconst Contact = ({ contact, selectAll }) => {\n  const dispatch = useDispatch();\n  const { name, phone, email, id } = contact;\n  return (\n    <tr>\n      <td>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            checked={selectAll}\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n          />\n          <label className=\"custom-control-label\"></label>\n        </div>\n      </td>\n      <td>\n        <Avatar className=\"mr-2\" name={name} size=\"45\" round={true} /> {name}\n      </td>\n      <td>{phone}</td>\n      <td>{email}</td>\n      <td className=\"actions\">\n        <Link to={`/contacts/edit/${id}`}>\n          <span className=\"material-icons mr-2\">edit</span>\n        </Link>\n        <span\n          className=\"material-icons  text-danger\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          remove_circle\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default Contact;\n","import {\n  CREATE_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SELECT_CONTACT,\n  CLEAR_CONTACT,\n  DELETE_SELECTED_CONTACT,\n} from \"../constant/types\";\n\n// actions\nexport const addContact = (contact) => ({\n  type: CREATE_CONTACT,\n  payload: contact,\n});\n\n// get a contact\nexport const getContact = (id) => ({\n  type: GET_CONTACT,\n  payload: id,\n});\n\n// update a contact\nexport const updateContact = (contact) => ({\n  type: UPDATE_CONTACT,\n  payload: contact,\n});\n\n// delete a contact\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n\n// select all contact\nexport const selectAllContact = (id) => ({\n  type: SELECT_CONTACT,\n  payload: id,\n});\n\n// clear selected contacts\nexport const clearAllContact = () => ({\n  type: CLEAR_CONTACT,\n});\n\n// delete selected contacts\nexport const deleteAllContact = () => ({\n  type: DELETE_SELECTED_CONTACT,\n});\n","export const CREATE_CONTACT = \"CREATE_CONTACT\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const SELECT_CONTACT = \"SELECT_CONTACT\";\nexport const CLEAR_CONTACT = \"CLEAR_CONTACT\";\nexport const DELETE_SELECTED_CONTACT = \"DELETE_SELECTED_CONTACT\";\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Contact from \"./Contact\";\nimport {\n  selectAllContact,\n  clearAllContact,\n  deleteAllContact,\n} from \"../../actions/contactAction\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const [selectAll, setSelectAll] = useState(false);\n  const contacts = useSelector((state) => state.contact.contacts);\n  const selctedContcats = useSelector(\n    (state) => state.contact.selectedContacts\n  );\n\n  useEffect(() => {\n    if (selectAll) {\n      dispatch(selectAllContact(contacts.map((contact) => contact.id)));\n    } else {\n      dispatch(clearAllContact());\n    }\n  }, [selectAll]);\n\n  return (\n    <div>\n      {selctedContcats.length > 0 ? (\n        <button\n          className=\"btn btn-danger mb-3\"\n          onClick={() => dispatch(deleteAllContact())}\n        >\n          delete all\n        </button>\n      ) : null}\n      <table className=\"table shadow\">\n        <thead>\n          <tr>\n            <th>\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  id=\"selectAll\"\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  value={selectAll}\n                  onClick={() => setSelectAll(!selectAll)}\n                />\n                <label\n                  htmlFor=\"selectAll\"\n                  className=\"custom-control-label\"\n                ></label>\n              </div>\n            </th>\n            <th>Name</th>\n            <th>Phone</th>\n            <th>E-mail</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map((contact) => (\n            <Contact contact={contact} key={contact.id} selectAll={selectAll} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import {\n  CREATE_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SELECT_CONTACT,\n  CLEAR_CONTACT,\n  DELETE_SELECTED_CONTACT,\n} from \"../constant/types\";\n\nconst intialState = {\n  contacts: [{\n      id: 1,\n      name: \"Leanne Graham\",\n      username: \"Bret\",\n      email: \"Sincere@april.biz\",\n      address: {\n        street: \"Kulas Light\",\n        suite: \"Apt. 556\",\n        city: \"Gwenborough\",\n        zipcode: \"92998-3874\",\n        geo: {\n          lat: \"-37.3159\",\n          lng: \"81.1496\",\n        },\n      },\n      phone: \"1-770-736-8031 x56442\",\n      website: \"hildegard.org\",\n      company: {\n        name: \"Romaguera-Crona\",\n        catchPhrase: \"Multi-layered client-server neural-net\",\n        bs: \"harness real-time e-markets\",\n      },\n    },\n    {\n      id: 2,\n      name: \"Ervin Howell\",\n      username: \"Antonette\",\n      email: \"Shanna@melissa.tv\",\n      address: {\n        street: \"Victor Plains\",\n        suite: \"Suite 879\",\n        city: \"Wisokyburgh\",\n        zipcode: \"90566-7771\",\n        geo: {\n          lat: \"-43.9509\",\n          lng: \"-34.4618\",\n        },\n      },\n      phone: \"010-692-6593 x09125\",\n      website: \"anastasia.net\",\n      company: {\n        name: \"Deckow-Crist\",\n        catchPhrase: \"Proactive didactic contingency\",\n        bs: \"synergize scalable supply-chains\",\n      },\n    },\n    {\n      id: 3,\n      name: \"Clementine Bauch\",\n      username: \"Samantha\",\n      email: \"Nathan@yesenia.net\",\n      address: {\n        street: \"Douglas Extension\",\n        suite: \"Suite 847\",\n        city: \"McKenziehaven\",\n        zipcode: \"59590-4157\",\n        geo: {\n          lat: \"-68.6102\",\n          lng: \"-47.0653\",\n        },\n      },\n      phone: \"1-463-123-4447\",\n      website: \"ramiro.info\",\n      company: {\n        name: \"Romaguera-Jacobson\",\n        catchPhrase: \"Face to face bifurcated interface\",\n        bs: \"e-enable strategic applications\",\n      },\n    },\n    {\n      id: 4,\n      name: \"Patricia Lebsack\",\n      username: \"Karianne\",\n      email: \"Julianne.OConner@kory.org\",\n      address: {\n        street: \"Hoeger Mall\",\n        suite: \"Apt. 692\",\n        city: \"South Elvis\",\n        zipcode: \"53919-4257\",\n        geo: {\n          lat: \"29.4572\",\n          lng: \"-164.2990\",\n        },\n      },\n      phone: \"493-170-9623 x156\",\n      website: \"kale.biz\",\n      company: {\n        name: \"Robel-Corkery\",\n        catchPhrase: \"Multi-tiered zero tolerance productivity\",\n        bs: \"transition cutting-edge web services\",\n      },\n    },\n    {\n      id: 5,\n      name: \"Chelsey Dietrich\",\n      username: \"Kamren\",\n      email: \"Lucio_Hettinger@annie.ca\",\n      address: {\n        street: \"Skiles Walks\",\n        suite: \"Suite 351\",\n        city: \"Roscoeview\",\n        zipcode: \"33263\",\n        geo: {\n          lat: \"-31.8129\",\n          lng: \"62.5342\",\n        },\n      },\n      phone: \"(254)954-1289\",\n      website: \"demarco.info\",\n      company: {\n        name: \"Keebler LLC\",\n        catchPhrase: \"User-centric fault-tolerant solution\",\n        bs: \"revolutionize end-to-end systems\",\n      },\n    },\n    {\n      id: 6,\n      name: \"Mrs. Dennis Schulist\",\n      username: \"Leopoldo_Corkery\",\n      email: \"Karley_Dach@jasper.info\",\n      address: {\n        street: \"Norberto Crossing\",\n        suite: \"Apt. 950\",\n        city: \"South Christy\",\n        zipcode: \"23505-1337\",\n        geo: {\n          lat: \"-71.4197\",\n          lng: \"71.7478\",\n        },\n      },\n      phone: \"1-477-935-8478 x6430\",\n      website: \"ola.org\",\n      company: {\n        name: \"Considine-Lockman\",\n        catchPhrase: \"Synchronised bottom-line interface\",\n        bs: \"e-enable innovative applications\",\n      },\n    },\n    {\n      id: 7,\n      name: \"Kurtis Weissnat\",\n      username: \"Elwyn.Skiles\",\n      email: \"Telly.Hoeger@billy.biz\",\n      address: {\n        street: \"Rex Trail\",\n        suite: \"Suite 280\",\n        city: \"Howemouth\",\n        zipcode: \"58804-1099\",\n        geo: {\n          lat: \"24.8918\",\n          lng: \"21.8984\",\n        },\n      },\n      phone: \"210.067.6132\",\n      website: \"elvis.io\",\n      company: {\n        name: \"Johns Group\",\n        catchPhrase: \"Configurable multimedia task-force\",\n        bs: \"generate enterprise e-tailers\",\n      },\n    },\n    {\n      id: 8,\n      name: \"Nicholas Runolfsdottir V\",\n      username: \"Maxime_Nienow\",\n      email: \"Sherwood@rosamond.me\",\n      address: {\n        street: \"Ellsworth Summit\",\n        suite: \"Suite 729\",\n        city: \"Aliyaview\",\n        zipcode: \"45169\",\n        geo: {\n          lat: \"-14.3990\",\n          lng: \"-120.7677\",\n        },\n      },\n      phone: \"586.493.6943 x140\",\n      website: \"jacynthe.com\",\n      company: {\n        name: \"Abernathy Group\",\n        catchPhrase: \"Implemented secondary concept\",\n        bs: \"e-enable extensible e-tailers\",\n      },\n    },\n    {\n      id: 9,\n      name: \"Glenna Reichert\",\n      username: \"Delphine\",\n      email: \"Chaim_McDermott@dana.io\",\n      address: {\n        street: \"Dayna Park\",\n        suite: \"Suite 449\",\n        city: \"Bartholomebury\",\n        zipcode: \"76495-3109\",\n        geo: {\n          lat: \"24.6463\",\n          lng: \"-168.8889\",\n        },\n      },\n      phone: \"(775)976-6794 x41206\",\n      website: \"conrad.com\",\n      company: {\n        name: \"Yost and Sons\",\n        catchPhrase: \"Switchable contextually-based project\",\n        bs: \"aggregate real-time technologies\",\n      },\n    },\n    {\n      id: 10,\n      name: \"Clementina DuBuque\",\n      username: \"Moriah.Stanton\",\n      email: \"Rey.Padberg@karina.biz\",\n      address: {\n        street: \"Kattie Turnpike\",\n        suite: \"Suite 198\",\n        city: \"Lebsackbury\",\n        zipcode: \"31428-2261\",\n        geo: {\n          lat: \"-38.2386\",\n          lng: \"57.2232\",\n        },\n      },\n      phone: \"024-648-3804\",\n      website: \"ambrose.net\",\n      company: {\n        name: \"Hoeger LLC\",\n        catchPhrase: \"Centralized empowering task-force\",\n        bs: \"target end-to-end models\",\n      },\n    },\n  ],\n  contact: null,\n  selectedContacts: [],\n};\n\nexport const contactReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case CREATE_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case GET_CONTACT:\n      let arr = state.contacts.filter(\n        (contact) => contact.id == action.payload\n      );\n      arr = arr.values();\n      for (let val of arr) {\n        arr = val;\n      }\n      return {\n        ...state,\n        contact: arr,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id == action.payload.id ? action.payload : contact\n        ),\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id != action.payload\n        ),\n      };\n    case DELETE_SELECTED_CONTACT:\n      return {\n        ...state,\n        contacts: [],\n      };\n    case SELECT_CONTACT:\n      return {\n        ...state,\n        selectedContacts: action.payload,\n      };\n\n    case CLEAR_CONTACT:\n      return {\n        ...state,\n        selectedContacts: [],\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from \"redux\";\nimport { contactReducer } from \"./contactReducer\";\n\nexport default combineReducers({\n  contact: contactReducer,\n});\n","import {\n    createStore\n} from \"redux\";\nimport {\n    composeWithDevTools\n} from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../actions/contactAction\";\nimport shortid from \"shortid\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddContact = () => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const craeteContact = (e) => {\n    e.preventDefault();\n    const new_contact = {\n      id: shortid.generate(),\n      name: name,\n      phone: phone,\n      email: email,\n    };\n    dispatch(addContact(new_contact));\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card border-0 shadow\">\n      <div className=\"card-header\">Add a Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={(e) => craeteContact(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Phone Number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your E-mail Address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Create Contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddContact;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContact, updateContact } from \"../../actions/contactAction\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst EditContact = () => {\n  let { id } = useParams();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const contact = useSelector((state) => state.contact.contact);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  useEffect(() => {\n    if (contact != null) {\n      setName(contact.name);\n      setPhone(contact.phone);\n      setEmail(contact.email);\n    }\n    dispatch(getContact(id));\n  }, [contact]);\n\n  const onUpdateContact = (e) => {\n    e.preventDefault();\n\n    const update_contact = Object.assign(contact, {\n      name: name,\n      phone: phone,\n      email: email,\n    });\n\n    dispatch(updateContact(update_contact));\n    history.push(\"/\")\n  };\n  return (\n    <div className=\"card border-0 shadow\">\n      <div className=\"card-header\">Add a Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={(e) => onUpdateContact(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Phone Number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your E-mail Address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button className=\"btn btn-warning\" type=\"submit\">\n            Update Contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditContact;\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Navbar from \"./components/elements/Navbar\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact  from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <div className=\"py-3\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route\n                  exact\n                  path=\"/contacts/edit/:id\"\n                  component={EditContact}\n                />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}